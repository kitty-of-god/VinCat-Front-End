{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\universidad\\\\7 semestre\\\\ingesoft II\\\\VinCat-Front-End\\\\vincat-front-end\\\\src\\\\components\\\\Login\\\\index.js\";\n//Dependencies\nimport React, { Component } from 'react';\nimport LoginPage from './LoginPage'; //import { storeLoginAccountInfo } from '../../actions';\n\nimport { connect } from 'react-redux';\n/*Everything from the login page should be rendered\r\nhere in order to centralize all components.*/\n\nclass Login extends Component {\n  render() {\n    if (this.props.loginAccountInfo) {\n      console.log(this.props.loginAccountInfo);\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, \"Estas Logueado \", this.props.loginAccountInfo.accountInfo);\n    }\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, console.log(this.props.loginAccountInfo), React.createElement(LoginPage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }));\n  }\n\n} // Para conectar react con redux\n\n\nconst mapStateToProps = state => {\n  return {\n    loginAccountInfo: state.loginAccountInfo\n  };\n};\n\nexport default connect(mapStateToProps)(Login);","map":{"version":3,"sources":["D:\\Documents\\universidad\\7 semestre\\ingesoft II\\VinCat-Front-End\\vincat-front-end\\src\\components\\Login\\index.js"],"names":["React","Component","LoginPage","connect","Login","render","props","loginAccountInfo","console","log","accountInfo","mapStateToProps","state"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,aAAtB,C,CACA;;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA;;;AAGA,MAAMC,KAAN,SAAoBH,SAApB,CAA6B;AAC3BI,EAAAA,MAAM,GAAE;AACN,QAAI,KAAKC,KAAL,CAAWC,gBAAf,EAAgC;AAC9BC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAL,CAAWC,gBAAvB;AACA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAoB,KAAKD,KAAL,CAAWC,gBAAX,CAA4BG,WAAhD,CADJ;AAGD;;AAED,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAL,CAAWC,gBAAvB,CADH,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AAf0B,C,CAmB7B;;;AACA,MAAMI,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AAACL,IAAAA,gBAAgB,EAAEK,KAAK,CAACL;AAAzB,GAAP;AACH,CAFD;;AAIA,eAAeJ,OAAO,CAACQ,eAAD,CAAP,CAAyBP,KAAzB,CAAf","sourcesContent":["//Dependencies\r\nimport React, {Component} from 'react';\r\nimport LoginPage from './LoginPage';\r\n//import { storeLoginAccountInfo } from '../../actions';\r\nimport { connect } from 'react-redux';\r\n\r\n/*Everything from the login page should be rendered\r\nhere in order to centralize all components.*/\r\n\r\nclass Login extends Component{\r\n  render(){\r\n    if (this.props.loginAccountInfo){\r\n      console.log(this.props.loginAccountInfo);\r\n      return (\r\n          <h1>Estas Logueado {this.props.loginAccountInfo.accountInfo}</h1>\r\n      )\r\n    }\r\n\r\n    return(\r\n      <React.Fragment>\r\n        {console.log(this.props.loginAccountInfo)}\r\n        <LoginPage/>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n// Para conectar react con redux\r\nconst mapStateToProps = (state) => {\r\n    return {loginAccountInfo: state.loginAccountInfo};\r\n};\r\n\r\nexport default connect(mapStateToProps)(Login);\r\n"]},"metadata":{},"sourceType":"module"}